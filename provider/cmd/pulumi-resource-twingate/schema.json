{
    "name": "twingate",
    "displayName": "Twingate",
    "description": "A Pulumi package for creating and managing Twingate cloud resources.",
    "keywords": [
        "pulumi",
        "twingate",
        "category/infrastructure"
    ],
    "homepage": "https://www.twingate.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`twingate` Terraform Provider](https://github.com/Twingate/terraform-provider-twingate).",
    "repository": "https://github.com/Twingate/pulumi-twingate",
    "logoUrl": "https://raw.githubusercontent.com/Twingate/pulumi-twingate/main/docs/logo.png",
    "pluginDownloadURL": "github://api.github.com/Twingate/pulumi-twingate",
    "publisher": "Twingate",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Twingate"
        },
        "go": {
            "importBasePath": "github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@twingate/pulumi-twingate",
            "packageDescription": "A Pulumi package for creating and managing Twingate cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-twingate` repo](https://github.com/Twingate/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-twingate` repo](https://github.com/Twingate/terraform-provider-twingate/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "pulumi_twingate",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-twingate` repo](https://github.com/Twingate/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-twingate` repo](https://github.com/Twingate/terraform-provider-twingate/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n"
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 35 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n"
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "types": {
        "twingate:index/TwingateResourceAccessGroup:TwingateResourceAccessGroup": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "Group ID that will have permission to access the Resource.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of a `twingate.getTwingateSecurityPolicy` to use as the access policy for the group IDs in the access block.\n"
                },
                "usageBasedAutolockDurationDays": {
                    "type": "integer",
                    "description": "The usage-based auto-lock duration configured on the edge (in days).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "groupId",
                        "securityPolicyId",
                        "usageBasedAutolockDurationDays"
                    ]
                }
            }
        },
        "twingate:index/TwingateResourceAccessService:TwingateResourceAccessService": {
            "properties": {
                "serviceAccountId": {
                    "type": "string",
                    "description": "The ID of the service account that should have access to this Resource.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serviceAccountId"
                    ]
                }
            }
        },
        "twingate:index/TwingateResourceProtocols:TwingateResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean",
                    "description": "Whether to allow ICMP (ping) traffic\n"
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp"
                },
                "udp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowIcmp",
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Whether to allow or deny all ports, or restrict protocol access within certain port ranges: Can be `RESTRICTED` (only listed ports are allowed), `ALLOW_ALL`, or `DENY_ALL`\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of port ranges between 1 and 65535 inclusive, in the format `100-200` for a range, or `8080` for a single port\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "policy",
                        "ports"
                    ]
                }
            }
        },
        "twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Whether to allow or deny all ports, or restrict protocol access within certain port ranges: Can be `RESTRICTED` (only listed ports are allowed), `ALLOW_ALL`, or `DENY_ALL`\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of port ranges between 1 and 65535 inclusive, in the format `100-200` for a range, or `8080` for a single port\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "policy",
                        "ports"
                    ]
                }
            }
        },
        "twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Connector.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name of the Connector.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network attached to the Connector.\n"
                },
                "statusUpdatesEnabled": {
                    "type": "boolean",
                    "description": "Determines whether status notifications are enabled for the Connector.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "remoteNetworkId",
                "statusUpdatesEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Group\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Indicates if the Group is active\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The Security Policy assigned to the Group.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Group\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "isActive",
                "name",
                "securityPolicyId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateRemoteNetworksRemoteNetwork:getTwingateRemoteNetworksRemoteNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Remote Network.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "location"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocols:getTwingateResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean",
                    "description": "Whether to allow ICMP (ping) traffic\n"
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/getTwingateResourceProtocolsTcp:getTwingateResourceProtocolsTcp"
                },
                "udp": {
                    "$ref": "#/types/twingate:index/getTwingateResourceProtocolsUdp:getTwingateResourceProtocolsUdp"
                }
            },
            "type": "object",
            "required": [
                "allowIcmp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocolsTcp:getTwingateResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Whether to allow or deny all ports, or restrict protocol access within certain port ranges: Can be `RESTRICTED` (only listed ports are allowed), `ALLOW_ALL`, or `DENY_ALL`\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of port ranges between 1 and 65535 inclusive, in the format `100-200` for a range, or `8080` for a single port\n"
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocolsUdp:getTwingateResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Whether to allow or deny all ports, or restrict protocol access within certain port ranges: Can be `RESTRICTED` (only listed ports are allowed), `ALLOW_ALL`, or `DENY_ALL`\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of port ranges between 1 and 65535 inclusive, in the format `100-200` for a range, or `8080` for a single port\n"
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResource:getTwingateResourcesResource": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "id": {
                    "type": "string",
                    "description": "The id of the Resource\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocols:getTwingateResourcesResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "id",
                "name",
                "protocols",
                "remoteNetworkId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocols:getTwingateResourcesResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean",
                    "description": "Whether to allow ICMP (ping) traffic\n"
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocolsTcp:getTwingateResourcesResourceProtocolsTcp"
                },
                "udp": {
                    "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocolsUdp:getTwingateResourcesResourceProtocolsUdp"
                }
            },
            "type": "object",
            "required": [
                "allowIcmp",
                "tcp",
                "udp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocolsTcp:getTwingateResourcesResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Whether to allow or deny all ports, or restrict protocol access within certain port ranges: Can be `RESTRICTED` (only listed ports are allowed), `ALLOW_ALL`, or `DENY_ALL`\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of port ranges between 1 and 65535 inclusive, in the format `100-200` for a range, or `8080` for a single port\n"
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocolsUdp:getTwingateResourcesResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Whether to allow or deny all ports, or restrict protocol access within certain port ranges: Can be `RESTRICTED` (only listed ports are allowed), `ALLOW_ALL`, or `DENY_ALL`\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of port ranges between 1 and 65535 inclusive, in the format `100-200` for a range, or `8080` for a single port\n"
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Return a matching Security Policy by its ID. The ID for the Security Policy can be obtained from the Admin API or the URL string in the Admin Console.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Return a Security Policy that exactly matches this name.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateServiceAccountsServiceAccount:getTwingateServiceAccountsServiceAccount": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the Service Account resource\n"
                },
                "keyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of twingate*service*account_key IDs that are assigned to the Service Account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Service Account\n"
                },
                "resourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of twingate.TwingateResource IDs that the Service Account is assigned to.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "keyIds",
                "name",
                "resourceIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateUsersUser:getTwingateUsersUser": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the User\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the User\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the User\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the User\n"
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the User's type. Either MANUAL or SYNCED.\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "id",
                "lastName",
                "role",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the twingate package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n"
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 35 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n"
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n"
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 35 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n"
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "resources": {
        "twingate:index/twingateConnector:TwingateConnector": {
            "description": "Connectors provide connectivity to Remote Networks. This resource type will create the Connector in the Twingate Admin Console, but in order to successfully deploy it, you must also generate Connector tokens that authenticate the Connector with Twingate. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {});\nconst awsConnector = new twingate.TwingateConnector(\"awsConnector\", {\n    remoteNetworkId: awsNetwork.id,\n    statusUpdatesEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\")\naws_connector = twingate.TwingateConnector(\"awsConnector\",\n    remote_network_id=aws_network.id,\n    status_updates_enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Twingate.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\");\n\n    var awsConnector = new Twingate.TwingateConnector(\"awsConnector\", new()\n    {\n        RemoteNetworkId = awsNetwork.Id,\n        StatusUpdatesEnabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateConnector(ctx, \"awsConnector\", \u0026twingate.TwingateConnectorArgs{\n\t\t\tRemoteNetworkId:      awsNetwork.ID(),\n\t\t\tStatusUpdatesEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport com.pulumi.twingate.TwingateConnector;\nimport com.pulumi.twingate.TwingateConnectorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\");\n\n        var awsConnector = new TwingateConnector(\"awsConnector\", TwingateConnectorArgs.builder()        \n            .remoteNetworkId(awsNetwork.id())\n            .statusUpdatesEnabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n  awsConnector:\n    type: twingate:TwingateConnector\n    properties:\n      remoteNetworkId: ${awsNetwork.id}\n      statusUpdatesEnabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import twingate:index/twingateConnector:TwingateConnector aws_connector Q29ubmVjdG9yOjI2NzM=\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network the Connector is attached to.\n"
                },
                "statusUpdatesEnabled": {
                    "type": "boolean",
                    "description": "Determines whether status notifications are enabled for the Connector. Default is `true`.\n"
                }
            },
            "required": [
                "name",
                "remoteNetworkId",
                "statusUpdatesEnabled"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network the Connector is attached to.\n"
                },
                "statusUpdatesEnabled": {
                    "type": "boolean",
                    "description": "Determines whether status notifications are enabled for the Connector. Default is `true`.\n"
                }
            },
            "requiredInputs": [
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnector resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Connector, if not provided one will be generated.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The ID of the Remote Network the Connector is attached to.\n"
                    },
                    "statusUpdatesEnabled": {
                        "type": "boolean",
                        "description": "Determines whether status notifications are enabled for the Connector. Default is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateConnectorTokens:TwingateConnectorTokens": {
            "description": "This resource type will generate tokens for a Connector, which are needed to successfully provision one on your network. The Connector itself has its own resource type and must be created before you can provision tokens.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {});\nconst awsConnector = new twingate.TwingateConnector(\"awsConnector\", {remoteNetworkId: awsNetwork.id});\nconst awsConnectorTokens = new twingate.TwingateConnectorTokens(\"awsConnectorTokens\", {connectorId: awsConnector.id});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\")\naws_connector = twingate.TwingateConnector(\"awsConnector\", remote_network_id=aws_network.id)\naws_connector_tokens = twingate.TwingateConnectorTokens(\"awsConnectorTokens\", connector_id=aws_connector.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Twingate.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\");\n\n    var awsConnector = new Twingate.TwingateConnector(\"awsConnector\", new()\n    {\n        RemoteNetworkId = awsNetwork.Id,\n    });\n\n    var awsConnectorTokens = new Twingate.TwingateConnectorTokens(\"awsConnectorTokens\", new()\n    {\n        ConnectorId = awsConnector.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tawsConnector, err := twingate.NewTwingateConnector(ctx, \"awsConnector\", \u0026twingate.TwingateConnectorArgs{\n\t\t\tRemoteNetworkId: awsNetwork.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateConnectorTokens(ctx, \"awsConnectorTokens\", \u0026twingate.TwingateConnectorTokensArgs{\n\t\t\tConnectorId: awsConnector.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport com.pulumi.twingate.TwingateConnector;\nimport com.pulumi.twingate.TwingateConnectorArgs;\nimport com.pulumi.twingate.TwingateConnectorTokens;\nimport com.pulumi.twingate.TwingateConnectorTokensArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\");\n\n        var awsConnector = new TwingateConnector(\"awsConnector\", TwingateConnectorArgs.builder()        \n            .remoteNetworkId(awsNetwork.id())\n            .build());\n\n        var awsConnectorTokens = new TwingateConnectorTokens(\"awsConnectorTokens\", TwingateConnectorTokensArgs.builder()        \n            .connectorId(awsConnector.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n  awsConnector:\n    type: twingate:TwingateConnector\n    properties:\n      remoteNetworkId: ${awsNetwork.id}\n  awsConnectorTokens:\n    type: twingate:TwingateConnectorTokens\n    properties:\n      connectorId: ${awsConnector.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token of the parent Connector\n",
                    "secret": true
                },
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate Connector tokens on a schedule.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The Refresh Token of the parent Connector\n",
                    "secret": true
                }
            },
            "required": [
                "accessToken",
                "connectorId",
                "refreshToken"
            ],
            "inputProperties": {
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate Connector tokens on a schedule.\n"
                }
            },
            "requiredInputs": [
                "connectorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnectorTokens resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "The Access Token of the parent Connector\n",
                        "secret": true
                    },
                    "connectorId": {
                        "type": "string",
                        "description": "The ID of the parent Connector\n"
                    },
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate Connector tokens on a schedule.\n"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "The Refresh Token of the parent Connector\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateGroup:TwingateGroup": {
            "description": "Groups are how users are authorized to access Resources. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/groups).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate/pulumi-twingate\";\n\nconst aws = new twingate.TwingateGroup(\"aws\", {});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws = twingate.TwingateGroup(\"aws\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Twingate.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var aws = new Twingate.TwingateGroup(\"aws\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateGroup(ctx, \"aws\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateGroup;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var aws = new TwingateGroup(\"aws\");\n\n    }\n}\n```\n```yaml\nresources:\n  aws:\n    type: twingate:TwingateGroup\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import twingate:index/twingateGroup:TwingateGroup aws R3JvdXA6MzQ4OTE=\n```\n\n",
            "properties": {
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether User assignments to this Group will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the group\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Defines which Security Policy applies to this Group. The Security Policy ID can be obtained from the `twingate.getTwingateSecurityPolicy` and `twingate.getTwingateSecurityPolicies` data sources.\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of User IDs that have permission to access the Group.\n"
                }
            },
            "required": [
                "isAuthoritative",
                "name",
                "securityPolicyId"
            ],
            "inputProperties": {
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether User assignments to this Group will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the group\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Defines which Security Policy applies to this Group. The Security Policy ID can be obtained from the `twingate.getTwingateSecurityPolicy` and `twingate.getTwingateSecurityPolicies` data sources.\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of User IDs that have permission to access the Group.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateGroup resources.\n",
                "properties": {
                    "isAuthoritative": {
                        "type": "boolean",
                        "description": "Determines whether User assignments to this Group will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the group\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Defines which Security Policy applies to this Group. The Security Policy ID can be obtained from the `twingate.getTwingateSecurityPolicy` and `twingate.getTwingateSecurityPolicies` data sources.\n"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of User IDs that have permission to access the Group.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateRemoteNetwork:TwingateRemoteNetwork": {
            "description": "A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Twingate.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\");\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import twingate:index/twingateRemoteNetwork:TwingateRemoteNetwork network UmVtb3RlTmV0d29zaipgMKIkNg==\n```\n\n",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "required": [
                "location",
                "name"
            ],
            "inputProperties": {
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateRemoteNetwork resources.\n",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateResource:TwingateResource": {
            "description": "Resources in Twingate represent servers on the private network that clients can connect to. Resources can be defined by IP, CIDR range, FQDN, or DNS zone. For more information, see the Twingate [documentation](https://docs.twingate.com/docs/resources-and-access-nodes).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport com.pulumi.twingate.TwingateGroup;\nimport com.pulumi.twingate.TwingateServiceAccount;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateSecurityPolicyArgs;\nimport com.pulumi.twingate.TwingateResource;\nimport com.pulumi.twingate.TwingateResourceArgs;\nimport com.pulumi.twingate.inputs.TwingateResourceProtocolsArgs;\nimport com.pulumi.twingate.inputs.TwingateResourceProtocolsTcpArgs;\nimport com.pulumi.twingate.inputs.TwingateResourceProtocolsUdpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\");\n\n        var aws = new TwingateGroup(\"aws\");\n\n        var githubActionsProd = new TwingateServiceAccount(\"githubActionsProd\");\n\n        final var testPolicy = TwingateFunctions.getTwingateSecurityPolicy(GetTwingateSecurityPolicyArgs.builder()\n            .name(\"Test Policy\")\n            .build());\n\n        var resource = new TwingateResource(\"resource\", TwingateResourceArgs.builder()        \n            .address(\"internal.int\")\n            .remoteNetworkId(awsNetwork.id())\n            .securityPolicyId(testPolicy.applyValue(getTwingateSecurityPolicyResult -\u003e getTwingateSecurityPolicyResult.id()))\n            .protocols(TwingateResourceProtocolsArgs.builder()\n                .allow_icmp(true)\n                .tcp(TwingateResourceProtocolsTcpArgs.builder()\n                    .policy(\"RESTRICTED\")\n                    .ports(                    \n                        \"80\",\n                        \"82-83\")\n                    .build())\n                .udp(TwingateResourceProtocolsUdpArgs.builder()\n                    .policy(\"ALLOW_ALL\")\n                    .build())\n                .build())\n            .dynamic(            \n                %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .isActive(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n  aws:\n    type: twingate:TwingateGroup\n  githubActionsProd:\n    type: twingate:TwingateServiceAccount\n  resource:\n    type: twingate:TwingateResource\n    properties:\n      address: internal.int\n      remoteNetworkId: ${awsNetwork.id}\n      securityPolicyId: ${testPolicy.id}\n      protocols:\n        allow_icmp: true\n        tcp:\n          policy: RESTRICTED\n          ports:\n            - '80'\n            - 82-83\n        udp:\n          policy: ALLOW_ALL\n      dynamic:\n        - forEach:\n            - ${aws.id}\n          content:\n            - groupId: ${access_group.value}\n              securityPolicyId: ${testPolicy.id}\n              usageBasedAutolockDurationDays: 30\n        - forEach:\n            - ${githubActionsProd.id}\n          content:\n            - serviceAccountId: ${access_service.value}\n      isActive: true\nvariables:\n  testPolicy:\n    fn::invoke:\n      Function: twingate:getTwingateSecurityPolicy\n      Arguments:\n        name: Test Policy\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import twingate:index/twingateResource:TwingateResource resource UmVzb3VyY2U6MzQwNDQ3\n```\n\n",
            "properties": {
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/TwingateResourceAccessGroup:TwingateResourceAccessGroup"
                    },
                    "description": "Restrict access to certain group\n"
                },
                "accessServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/TwingateResourceAccessService:TwingateResourceAccessService"
                    },
                    "description": "Restrict access to certain service account\n"
                },
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "alias": {
                    "type": "string",
                    "description": "Set a DNS alias address for the Resource. Must be a DNS-valid name string.\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Set the resource as active or inactive. Default is `true`.\n"
                },
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "isBrowserShortcutEnabled": {
                    "type": "boolean",
                    "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client. Default is `false`.\n"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client. Default is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of a `twingate.getTwingateSecurityPolicy` to use as the access policy for the group IDs in the access block.\n"
                }
            },
            "required": [
                "address",
                "isActive",
                "isAuthoritative",
                "isBrowserShortcutEnabled",
                "isVisible",
                "name",
                "protocols",
                "remoteNetworkId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/TwingateResourceAccessGroup:TwingateResourceAccessGroup"
                    },
                    "description": "Restrict access to certain group\n"
                },
                "accessServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/TwingateResourceAccessService:TwingateResourceAccessService"
                    },
                    "description": "Restrict access to certain service account\n"
                },
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "alias": {
                    "type": "string",
                    "description": "Set a DNS alias address for the Resource. Must be a DNS-valid name string.\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Set the resource as active or inactive. Default is `true`.\n"
                },
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "isBrowserShortcutEnabled": {
                    "type": "boolean",
                    "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client. Default is `false`.\n"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client. Default is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of a `twingate.getTwingateSecurityPolicy` to use as the access policy for the group IDs in the access block.\n"
                }
            },
            "requiredInputs": [
                "address",
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateResource resources.\n",
                "properties": {
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/TwingateResourceAccessGroup:TwingateResourceAccessGroup"
                        },
                        "description": "Restrict access to certain group\n"
                    },
                    "accessServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/TwingateResourceAccessService:TwingateResourceAccessService"
                        },
                        "description": "Restrict access to certain service account\n"
                    },
                    "address": {
                        "type": "string",
                        "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                    },
                    "alias": {
                        "type": "string",
                        "description": "Set a DNS alias address for the Resource. Must be a DNS-valid name string.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Set the resource as active or inactive. Default is `true`.\n"
                    },
                    "isAuthoritative": {
                        "type": "boolean",
                        "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                    },
                    "isBrowserShortcutEnabled": {
                        "type": "boolean",
                        "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client. Default is `false`.\n"
                    },
                    "isVisible": {
                        "type": "boolean",
                        "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client. Default is `true`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                        "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "Remote Network ID where the Resource lives\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of a `twingate.getTwingateSecurityPolicy` to use as the access policy for the group IDs in the access block.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateServiceAccount:TwingateServiceAccount": {
            "description": "Service Accounts offer a way to provide programmatic, centrally-controlled, and consistent access controls.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate/pulumi-twingate\";\n\nconst githubActionsProd = new twingate.TwingateServiceAccount(\"githubActionsProd\", {});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\ngithub_actions_prod = twingate.TwingateServiceAccount(\"githubActionsProd\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Twingate.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var githubActionsProd = new Twingate.TwingateServiceAccount(\"githubActionsProd\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateServiceAccount(ctx, \"githubActionsProd\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateServiceAccount;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var githubActionsProd = new TwingateServiceAccount(\"githubActionsProd\");\n\n    }\n}\n```\n```yaml\nresources:\n  githubActionsProd:\n    type: twingate:TwingateServiceAccount\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Account in Twingate\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Account in Twingate\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateServiceAccount resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Service Account in Twingate\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateServiceAccountKey:TwingateServiceAccountKey": {
            "description": "A Service Key authorizes access to all Resources assigned to a Service Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as time from \"@pulumiverse/time\";\nimport * as twingate from \"@twingate/pulumi-twingate\";\n\nconst githubActionsProd = new twingate.TwingateServiceAccount(\"githubActionsProd\", {});\nconst githubKey = new twingate.TwingateServiceAccountKey(\"githubKey\", {serviceAccountId: githubActionsProd.id});\n// Key rotation using the time provider (see https://registry.terraform.io/providers/hashicorp/time/latest)\nconst keyRotationRotating = new time.Rotating(\"keyRotationRotating\", {rotationDays: 30});\nconst keyRotationStatic = new time.Static(\"keyRotationStatic\", {rfc3339: keyRotationRotating.rfc3339});\nconst githubKeyWithRotation = new twingate.TwingateServiceAccountKey(\"githubKeyWithRotation\", {serviceAccountId: githubActionsProd.id});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\nimport pulumiverse_time as time\n\ngithub_actions_prod = twingate.TwingateServiceAccount(\"githubActionsProd\")\ngithub_key = twingate.TwingateServiceAccountKey(\"githubKey\", service_account_id=github_actions_prod.id)\n# Key rotation using the time provider (see https://registry.terraform.io/providers/hashicorp/time/latest)\nkey_rotation_rotating = time.Rotating(\"keyRotationRotating\", rotation_days=30)\nkey_rotation_static = time.Static(\"keyRotationStatic\", rfc3339=key_rotation_rotating.rfc3339)\ngithub_key_with_rotation = twingate.TwingateServiceAccountKey(\"githubKeyWithRotation\", service_account_id=github_actions_prod.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Time = Pulumiverse.Time;\nusing Twingate = Twingate.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var githubActionsProd = new Twingate.TwingateServiceAccount(\"githubActionsProd\");\n\n    var githubKey = new Twingate.TwingateServiceAccountKey(\"githubKey\", new()\n    {\n        ServiceAccountId = githubActionsProd.Id,\n    });\n\n    // Key rotation using the time provider (see https://registry.terraform.io/providers/hashicorp/time/latest)\n    var keyRotationRotating = new Time.Rotating(\"keyRotationRotating\", new()\n    {\n        RotationDays = 30,\n    });\n\n    var keyRotationStatic = new Time.Static(\"keyRotationStatic\", new()\n    {\n        Rfc3339 = keyRotationRotating.Rfc3339,\n    });\n\n    var githubKeyWithRotation = new Twingate.TwingateServiceAccountKey(\"githubKeyWithRotation\", new()\n    {\n        ServiceAccountId = githubActionsProd.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-time/sdk/go/time\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgithubActionsProd, err := twingate.NewTwingateServiceAccount(ctx, \"githubActionsProd\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateServiceAccountKey(ctx, \"githubKey\", \u0026twingate.TwingateServiceAccountKeyArgs{\n\t\t\tServiceAccountId: githubActionsProd.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tkeyRotationRotating, err := time.NewRotating(ctx, \"keyRotationRotating\", \u0026time.RotatingArgs{\n\t\t\tRotationDays: pulumi.Int(30),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = time.NewStatic(ctx, \"keyRotationStatic\", \u0026time.StaticArgs{\n\t\t\tRfc3339: keyRotationRotating.Rfc3339,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateServiceAccountKey(ctx, \"githubKeyWithRotation\", \u0026twingate.TwingateServiceAccountKeyArgs{\n\t\t\tServiceAccountId: githubActionsProd.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateServiceAccount;\nimport com.pulumi.twingate.TwingateServiceAccountKey;\nimport com.pulumi.twingate.TwingateServiceAccountKeyArgs;\nimport com.pulumi.time.Rotating;\nimport com.pulumi.time.RotatingArgs;\nimport com.pulumi.time.Static;\nimport com.pulumi.time.StaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var githubActionsProd = new TwingateServiceAccount(\"githubActionsProd\");\n\n        var githubKey = new TwingateServiceAccountKey(\"githubKey\", TwingateServiceAccountKeyArgs.builder()        \n            .serviceAccountId(githubActionsProd.id())\n            .build());\n\n        // Key rotation using the time provider (see https://registry.terraform.io/providers/hashicorp/time/latest)\n        var keyRotationRotating = new Rotating(\"keyRotationRotating\", RotatingArgs.builder()        \n            .rotationDays(30)\n            .build());\n\n        var keyRotationStatic = new Static(\"keyRotationStatic\", StaticArgs.builder()        \n            .rfc3339(keyRotationRotating.rfc3339())\n            .build());\n\n        var githubKeyWithRotation = new TwingateServiceAccountKey(\"githubKeyWithRotation\", TwingateServiceAccountKeyArgs.builder()        \n            .serviceAccountId(githubActionsProd.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  githubActionsProd:\n    type: twingate:TwingateServiceAccount\n  githubKey: # Key rotation using the time provider (see https://registry.terraform.io/providers/hashicorp/time/latest)\n    type: twingate:TwingateServiceAccountKey\n    properties:\n      serviceAccountId: ${githubActionsProd.id}\n  keyRotationRotating:\n    type: time:Rotating\n    properties:\n      rotationDays: 30\n  keyRotationStatic:\n    type: time:Static\n    properties:\n      rfc3339: ${keyRotationRotating.rfc3339}\n  githubKeyWithRotation:\n    type: twingate:TwingateServiceAccountKey\n    properties:\n      serviceAccountId: ${githubActionsProd.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "expirationTime": {
                    "type": "integer",
                    "description": "Specifies how many days until a Service Account Key expires. This should be an integer between 0 and 365 representing the number of days until the Service Account Key will expire. Defaults to 0, meaning the key will never expire.\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "If the value of this attribute changes to false, Terraform will destroy and recreate the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Service Key\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The id of the Service Account\n"
                },
                "token": {
                    "type": "string",
                    "description": "Autogenerated Service Key token. Used to configure a Twingate Client running in headless mode.\n",
                    "secret": true
                }
            },
            "required": [
                "expirationTime",
                "isActive",
                "name",
                "serviceAccountId",
                "token"
            ],
            "inputProperties": {
                "expirationTime": {
                    "type": "integer",
                    "description": "Specifies how many days until a Service Account Key expires. This should be an integer between 0 and 365 representing the number of days until the Service Account Key will expire. Defaults to 0, meaning the key will never expire.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Service Key\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The id of the Service Account\n"
                }
            },
            "requiredInputs": [
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateServiceAccountKey resources.\n",
                "properties": {
                    "expirationTime": {
                        "type": "integer",
                        "description": "Specifies how many days until a Service Account Key expires. This should be an integer between 0 and 365 representing the number of days until the Service Account Key will expire. Defaults to 0, meaning the key will never expire.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "If the value of this attribute changes to false, Terraform will destroy and recreate the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Service Key\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "The id of the Service Account\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Autogenerated Service Key token. Used to configure a Twingate Client running in headless mode.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateUser:TwingateUser": {
            "description": "Users provides different levels of write capabilities across the Twingate Admin Console. For more information, see Twingate's [documentation](https://www.twingate.com/docs/users).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate/pulumi-twingate\";\n\nconst user = new twingate.TwingateUser(\"user\", {\n    email: \"sample@company.com\",\n    firstName: \"Twin\",\n    lastName: \"Gate\",\n    role: \"DEVOPS\",\n    sendInvite: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nuser = twingate.TwingateUser(\"user\",\n    email=\"sample@company.com\",\n    first_name=\"Twin\",\n    last_name=\"Gate\",\n    role=\"DEVOPS\",\n    send_invite=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Twingate.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = new Twingate.TwingateUser(\"user\", new()\n    {\n        Email = \"sample@company.com\",\n        FirstName = \"Twin\",\n        LastName = \"Gate\",\n        Role = \"DEVOPS\",\n        SendInvite = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateUser(ctx, \"user\", \u0026twingate.TwingateUserArgs{\n\t\t\tEmail:      pulumi.String(\"sample@company.com\"),\n\t\t\tFirstName:  pulumi.String(\"Twin\"),\n\t\t\tLastName:   pulumi.String(\"Gate\"),\n\t\t\tRole:       pulumi.String(\"DEVOPS\"),\n\t\t\tSendInvite: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateUser;\nimport com.pulumi.twingate.TwingateUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user = new TwingateUser(\"user\", TwingateUserArgs.builder()        \n            .email(\"sample@company.com\")\n            .firstName(\"Twin\")\n            .lastName(\"Gate\")\n            .role(\"DEVOPS\")\n            .sendInvite(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: twingate:TwingateUser\n    properties:\n      email: sample@company.com\n      firstName: Twin\n      lastName: Gate\n      role: DEVOPS\n      sendInvite: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The User's first name\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Determines whether the User is active or not. Inactive users will be not able to sign in.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The User's last name\n"
                },
                "role": {
                    "type": "string",
                    "description": "Determines the User's role. Either ADMIN, DEVOPS, SUPPORT or MEMBER.\n"
                },
                "sendInvite": {
                    "type": "boolean",
                    "description": "Determines whether to send an email invitation to the User. True by default.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the User's type. Either MANUAL or SYNCED.\n"
                }
            },
            "required": [
                "email",
                "firstName",
                "isActive",
                "lastName",
                "role",
                "sendInvite",
                "type"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "The User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The User's first name\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Determines whether the User is active or not. Inactive users will be not able to sign in.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The User's last name\n"
                },
                "role": {
                    "type": "string",
                    "description": "Determines the User's role. Either ADMIN, DEVOPS, SUPPORT or MEMBER.\n"
                },
                "sendInvite": {
                    "type": "boolean",
                    "description": "Determines whether to send an email invitation to the User. True by default.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The User's email address\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The User's first name\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Determines whether the User is active or not. Inactive users will be not able to sign in.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The User's last name\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Determines the User's role. Either ADMIN, DEVOPS, SUPPORT or MEMBER.\n"
                    },
                    "sendInvite": {
                        "type": "boolean",
                        "description": "Determines whether to send an email invitation to the User. True by default.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the User's type. Either MANUAL or SYNCED.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "twingate:index/getTwingateConnector:getTwingateConnector": {
            "description": "Connectors provide connectivity to Remote Networks. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateConnector({\n    id: \"\u003cyour connector's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_connector(id=\"\u003cyour connector's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateConnector.Invoke(new()\n    {\n        Id = \"\u003cyour connector's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateConnector(ctx, \u0026twingate.LookupTwingateConnectorArgs{\n\t\t\tId: \"\u003cyour connector's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateConnectorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateConnector(GetTwingateConnectorArgs.builder()\n            .id(\"\u003cyour connector's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateConnector\n      Arguments:\n        id: \u003cyour connector's id\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateConnector.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Connector. The ID for the Connector can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateConnector.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Connector. The ID for the Connector can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Connector.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The ID of the Remote Network the Connector is attached to.\n"
                    },
                    "statusUpdatesEnabled": {
                        "type": "boolean",
                        "description": "Determines whether status notifications are enabled for the Connector.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "remoteNetworkId",
                    "statusUpdatesEnabled"
                ]
            }
        },
        "twingate:index/getTwingateConnectors:getTwingateConnectors": {
            "description": "Connectors provide connectivity to Remote Networks. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateConnectors({\n    name: \"\u003cyour connector's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_connectors(name=\"\u003cyour connector's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateConnectors.Invoke(new()\n    {\n        Name = \"\u003cyour connector's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateConnectors(ctx, \u0026twingate.GetTwingateConnectorsArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour connector's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateConnectorsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateConnectors(GetTwingateConnectorsArgs.builder()\n            .name(\"\u003cyour connector's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateConnectors\n      Arguments:\n        name: \u003cyour connector's name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateConnectors.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Name of the Connector.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the connector.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the connector.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the connector must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the connector.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the connector must end with the value.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateConnectors.\n",
                "properties": {
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector"
                        },
                        "description": "List of Connectors\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only connectors that exactly match this name. If no options are passed it will return all connectors. Only one option can be used at a time.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the connector.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the connector.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the connector must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the connector.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the connector must end with the value.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectors",
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateGroup:getTwingateGroup": {
            "description": "Groups are how users are authorized to access Resources. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/groups).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateGroup({\n    id: \"\u003cyour group's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_group(id=\"\u003cyour group's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateGroup.Invoke(new()\n    {\n        Id = \"\u003cyour group's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateGroup(ctx, \u0026twingate.LookupTwingateGroupArgs{\n\t\t\tId: \"\u003cyour group's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateGroup(GetTwingateGroupArgs.builder()\n            .id(\"\u003cyour group's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateGroup\n      Arguments:\n        id: \u003cyour group's id\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Group. The ID for the Group can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Group. The ID for the Group can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Indicates if the Group is active\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Group\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The Security Policy assigned to the Group.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Group\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "isActive",
                    "name",
                    "securityPolicyId",
                    "type"
                ]
            }
        },
        "twingate:index/getTwingateGroups:getTwingateGroups": {
            "description": "Groups are how users are authorized to access Resources. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/groups).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateGroups({\n    name: \"\u003cyour group's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_groups(name=\"\u003cyour group's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateGroups.Invoke(new()\n    {\n        Name = \"\u003cyour group's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateGroups(ctx, \u0026twingate.GetTwingateGroupsArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour group's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateGroups(GetTwingateGroupsArgs.builder()\n            .name(\"\u003cyour group's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateGroups\n      Arguments:\n        name: \u003cyour group's name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateGroups.\n",
                "properties": {
                    "isActive": {
                        "type": "boolean",
                        "description": "Indicates if the Group is active\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Group\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the group.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the group.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the group must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the group.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the group must end with the value.\n"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Returns groups that match a list of types. valid types: `MANUAL`, `SYNCED`, `SYSTEM`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup"
                        },
                        "description": "List of Groups\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Returns only Groups matching the specified state.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only groups that exactly match this name. If no options are passed it will return all resources. Only one option can be used at a time.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the group.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the group.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the group must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the group.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the group must end with the value.\n"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Returns groups that match a list of types. valid types: `MANUAL`, `SYNCED`, `SYSTEM`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateRemoteNetwork:getTwingateRemoteNetwork": {
            "description": "A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateRemoteNetwork({\n    name: \"\u003cyour network's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_remote_network(name=\"\u003cyour network's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateRemoteNetwork.Invoke(new()\n    {\n        Name = \"\u003cyour network's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateRemoteNetwork(ctx, \u0026twingate.LookupTwingateRemoteNetworkArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour network's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateRemoteNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateRemoteNetwork(GetTwingateRemoteNetworkArgs.builder()\n            .name(\"\u003cyour network's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateRemoteNetwork\n      Arguments:\n        name: \u003cyour network's name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateRemoteNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Remote Network\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateRemoteNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Remote Network\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object",
                "required": [
                    "location"
                ]
            }
        },
        "twingate:index/getTwingateRemoteNetworks:getTwingateRemoteNetworks": {
            "description": "A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateRemoteNetworks({\n    name: \"\u003cyour network's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_remote_networks(name=\"\u003cyour network's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateRemoteNetworks.Invoke(new()\n    {\n        Name = \"\u003cyour network's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateRemoteNetworks(ctx, \u0026twingate.GetTwingateRemoteNetworksArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour network's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateRemoteNetworksArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateRemoteNetworks(GetTwingateRemoteNetworksArgs.builder()\n            .name(\"\u003cyour network's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateRemoteNetworks\n      Arguments:\n        name: \u003cyour network's name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateRemoteNetworks.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the remote network.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the remote network.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the remote network must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the remote network.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the remote network must end with the value.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateRemoteNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only remote networks that exactly match this name. If no options are passed it will return all remote networks. Only one option can be used at a time.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the remote network.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the remote network.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the remote network must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the remote network.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the remote network must end with the value.\n"
                    },
                    "remoteNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateRemoteNetworksRemoteNetwork:getTwingateRemoteNetworksRemoteNetwork"
                        },
                        "description": "List of Remote Networks\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "remoteNetworks"
                ]
            }
        },
        "twingate:index/getTwingateResource:getTwingateResource": {
            "description": "Resources in Twingate represent any network destination address that you wish to provide private access to for users authorized via the Twingate Client application. Resources can be defined by either IP or DNS address, and all private DNS addresses will be automatically resolved with no client configuration changes. For more information, see the Twingate [documentation](https://docs.twingate.com/docs/resources-and-access-nodes).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateResource({\n    id: \"\u003cyour resource's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_resource(id=\"\u003cyour resource's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateResource.Invoke(new()\n    {\n        Id = \"\u003cyour resource's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateResource(ctx, \u0026twingate.LookupTwingateResourceArgs{\n\t\t\tId: \"\u003cyour resource's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateResourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateResource(GetTwingateResourceArgs.builder()\n            .id(\"\u003cyour resource's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateResource\n      Arguments:\n        id: \u003cyour resource's id\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateResource.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Resource. The ID for the Resource can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/getTwingateResourceProtocols:getTwingateResourceProtocols",
                        "description": "By default (when this argument is not defined) no restriction is applied, and all protocols and ports are allowed.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateResource.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The Resource's address, which may be an IP address, CIDR range, or DNS address\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the Resource. The ID for the Resource can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/getTwingateResourceProtocols:getTwingateResourceProtocols",
                        "description": "By default (when this argument is not defined) no restriction is applied, and all protocols and ports are allowed.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The Remote Network ID that the Resource is associated with. Resources may only be associated with a single Remote Network.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "name",
                    "remoteNetworkId"
                ]
            }
        },
        "twingate:index/getTwingateResources:getTwingateResources": {
            "description": "Resources in Twingate represent servers on the private network that clients can connect to. Resources can be defined by IP, CIDR range, FQDN, or DNS zone. For more information, see the Twingate [documentation](https://docs.twingate.com/docs/resources-and-access-nodes).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateResources({\n    name: \"\u003cyour resource's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_resources(name=\"\u003cyour resource's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateResources.Invoke(new()\n    {\n        Name = \"\u003cyour resource's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateResources(ctx, \u0026twingate.GetTwingateResourcesArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour resource's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateResourcesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateResources(GetTwingateResourcesArgs.builder()\n            .name(\"\u003cyour resource's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateResources\n      Arguments:\n        name: \u003cyour resource's name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateResources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the resource.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the resource.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the resource must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the resource.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the resource must end with the value.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateResources.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only resources that exactly match this name. If no options are passed it will return all resources. Only one option can be used at a time.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the resource.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the resource.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the resource must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the resource.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the resource must end with the value.\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateResourcesResource:getTwingateResourcesResource"
                        },
                        "description": "List of Resources\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "resources"
                ]
            }
        },
        "twingate:index/getTwingateSecurityPolicies:getTwingateSecurityPolicies": {
            "description": "Security Policies are defined in the Twingate Admin Console and determine user and device authentication requirements for Resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateSecurityPolicies({\n    name: \"\u003cyour security policy's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_security_policies(name=\"\u003cyour security policy's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateSecurityPolicies.Invoke(new()\n    {\n        Name = \"\u003cyour security policy's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateSecurityPolicies(ctx, \u0026twingate.GetTwingateSecurityPoliciesArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour security policy's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateSecurityPoliciesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateSecurityPolicies(GetTwingateSecurityPoliciesArgs.builder()\n            .name(\"\u003cyour security policy's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateSecurityPolicies\n      Arguments:\n        name: \u003cyour security policy's name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateSecurityPolicies.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Return a Security Policy that exactly matches this name.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the security policy.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the security policy.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the security policy must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the security policy.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the security policy must end with the value.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateSecurityPolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only security policies that exactly match this name. If no options are passed it will return all security policies. Only one option can be used at a time.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the security policy.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the security policy.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the security policy must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the security policy.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the security policy must end with the value.\n"
                    },
                    "securityPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "securityPolicies"
                ]
            }
        },
        "twingate:index/getTwingateSecurityPolicy:getTwingateSecurityPolicy": {
            "description": "Security Policies are defined in the Twingate Admin Console and determine user and device authentication requirements for Resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateSecurityPolicy({\n    name: \"\u003cyour security policy name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_security_policy(name=\"\u003cyour security policy name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateSecurityPolicy.Invoke(new()\n    {\n        Name = \"\u003cyour security policy name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateSecurityPolicy(ctx, \u0026twingate.GetTwingateSecurityPolicyArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour security policy name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateSecurityPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateSecurityPolicy(GetTwingateSecurityPolicyArgs.builder()\n            .name(\"\u003cyour security policy name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateSecurityPolicy\n      Arguments:\n        name: \u003cyour security policy name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateSecurityPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Return a Security Policy by its ID. The ID for the Security Policy can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Return a Security Policy that exactly matches this name.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateSecurityPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Return a Security Policy by its ID. The ID for the Security Policy can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Return a Security Policy that exactly matches this name.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/getTwingateServiceAccounts:getTwingateServiceAccounts": {
            "description": "Service Accounts offer a way to provide programmatic, centrally-controlled, and consistent access controls.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateServiceAccounts({\n    name: \"\u003cyour service account's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_service_accounts(name=\"\u003cyour service account's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateServiceAccounts.Invoke(new()\n    {\n        Name = \"\u003cyour service account's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateServiceAccounts(ctx, \u0026twingate.GetTwingateServiceAccountsArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour service account's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateServiceAccountsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateServiceAccounts(GetTwingateServiceAccountsArgs.builder()\n            .name(\"\u003cyour service account's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateServiceAccounts\n      Arguments:\n        name: \u003cyour service account's name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateServiceAccounts.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Service Account\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the service account.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the service account.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the service account must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the service account.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the service account must end with the value.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateServiceAccounts.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only service accounts that exactly match this name. If no options are passed it will return all service accounts. Only one option can be used at a time.\n"
                    },
                    "nameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the name of the service account.\n"
                    },
                    "nameExclude": {
                        "type": "string",
                        "description": "Match when the exact value does not exist in the name of the service account.\n"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The name of the service account must start with the value.\n"
                    },
                    "nameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the name of the service account.\n"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The name of the service account must end with the value.\n"
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateServiceAccountsServiceAccount:getTwingateServiceAccountsServiceAccount"
                        },
                        "description": "List of Service Accounts\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "serviceAccounts"
                ]
            }
        },
        "twingate:index/getTwingateUser:getTwingateUser": {
            "description": "Users in Twingate can be given access to Twingate Resources and may either be added manually or automatically synchronized with a 3rd party identity provider. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/users).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateUser({\n    id: \"\u003cyour user's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_user(id=\"\u003cyour user's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateUser.Invoke(new()\n    {\n        Id = \"\u003cyour user's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateUser(ctx, \u0026twingate.LookupTwingateUserArgs{\n\t\t\tId: \"\u003cyour user's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateUser(GetTwingateUserArgs.builder()\n            .id(\"\u003cyour user's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateUser\n      Arguments:\n        id: \u003cyour user's id\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the User. The ID for the User can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateUser.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address of the User\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the User\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the User. The ID for the User can be obtained from the Admin API or the URL string in the Admin Console.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the User\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the User's type. Either MANUAL or SYNCED.\n"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName",
                    "role",
                    "type"
                ]
            }
        },
        "twingate:index/getTwingateUsers:getTwingateUsers": {
            "description": "Users in Twingate can be given access to Twingate Resources and may either be added manually or automatically synchronized with a 3rd party identity provider. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/users).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateUsers({});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_users()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateUsers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateUsers();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateUsers\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateUsers.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address of the User\n"
                    },
                    "emailContains": {
                        "type": "string",
                        "description": "Match when the value exist in the email of the user.\n"
                    },
                    "emailExclude": {
                        "type": "string",
                        "description": "Match when the value does not exist in the email of the user.\n"
                    },
                    "emailPrefix": {
                        "type": "string",
                        "description": "The email of the user must start with the value.\n"
                    },
                    "emailRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the email of the user.\n"
                    },
                    "emailSuffix": {
                        "type": "string",
                        "description": "The email of the user must end with the value.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the User\n"
                    },
                    "firstNameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the first name of the user.\n"
                    },
                    "firstNameExclude": {
                        "type": "string",
                        "description": "Match when the value does not exist in the first name of the user.\n"
                    },
                    "firstNamePrefix": {
                        "type": "string",
                        "description": "The first name of the user must start with the value.\n"
                    },
                    "firstNameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the first name of the user.\n"
                    },
                    "firstNameSuffix": {
                        "type": "string",
                        "description": "The first name of the user must end with the value.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the User\n"
                    },
                    "lastNameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the last name of the user.\n"
                    },
                    "lastNameExclude": {
                        "type": "string",
                        "description": "Match when the value does not exist in the last name of the user.\n"
                    },
                    "lastNamePrefix": {
                        "type": "string",
                        "description": "The last name of the user must start with the value.\n"
                    },
                    "lastNameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the last name of the user.\n"
                    },
                    "lastNameSuffix": {
                        "type": "string",
                        "description": "The last name of the user must end with the value.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Returns users that match a list of roles. Valid roles: `ADMIN`, `DEVOPS`, `SUPPORT`, `MEMBER`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateUsers.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Returns only users that exactly match this email.\n"
                    },
                    "emailContains": {
                        "type": "string",
                        "description": "Match when the value exist in the email of the user.\n"
                    },
                    "emailExclude": {
                        "type": "string",
                        "description": "Match when the value does not exist in the email of the user.\n"
                    },
                    "emailPrefix": {
                        "type": "string",
                        "description": "The email of the user must start with the value.\n"
                    },
                    "emailRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the email of the user.\n"
                    },
                    "emailSuffix": {
                        "type": "string",
                        "description": "The email of the user must end with the value.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Returns only users that exactly match the first name.\n"
                    },
                    "firstNameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the first name of the user.\n"
                    },
                    "firstNameExclude": {
                        "type": "string",
                        "description": "Match when the value does not exist in the first name of the user.\n"
                    },
                    "firstNamePrefix": {
                        "type": "string",
                        "description": "The first name of the user must start with the value.\n"
                    },
                    "firstNameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the first name of the user.\n"
                    },
                    "firstNameSuffix": {
                        "type": "string",
                        "description": "The first name of the user must end with the value.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Returns only users that exactly match the last name.\n"
                    },
                    "lastNameContains": {
                        "type": "string",
                        "description": "Match when the value exist in the last name of the user.\n"
                    },
                    "lastNameExclude": {
                        "type": "string",
                        "description": "Match when the value does not exist in the last name of the user.\n"
                    },
                    "lastNamePrefix": {
                        "type": "string",
                        "description": "The last name of the user must start with the value.\n"
                    },
                    "lastNameRegexp": {
                        "type": "string",
                        "description": "The regular expression match of the last name of the user.\n"
                    },
                    "lastNameSuffix": {
                        "type": "string",
                        "description": "The last name of the user must end with the value.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Returns users that match a list of roles. Valid roles: `ADMIN`, `DEVOPS`, `SUPPORT`, `MEMBER`.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateUsersUser:getTwingateUsersUser"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "users"
                ]
            }
        }
    }
}