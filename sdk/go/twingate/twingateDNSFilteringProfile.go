// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"errors"
	"github.com/Twingate/pulumi-twingate/sdk/v3/go/twingate/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DNS filtering gives you the ability to control what websites your users can access. DNS filtering is only available on certain plans. For more information, see Twingate's [documentation](https://www.twingate.com/docs/dns-filtering). DNS filtering must be enabled for this resources to work. If DNS filtering isn't enabled, the provider will throw an error.
//
// ## Import
//
// ```sh
// $ pulumi import twingate:index/twingateDNSFilteringProfile:TwingateDNSFilteringProfile example RG5zRmlsdGVyaW5nUHJvZmlsZToxY2I4YzM0YTc0
// ```
type TwingateDNSFilteringProfile struct {
	pulumi.CustomResourceState

	// A block with the following attributes.
	AllowedDomains TwingateDNSFilteringProfileAllowedDomainsPtrOutput `pulumi:"allowedDomains"`
	// A block with the following attributes.
	ContentCategories TwingateDNSFilteringProfileContentCategoriesPtrOutput `pulumi:"contentCategories"`
	// A block with the following attributes.
	DeniedDomains TwingateDNSFilteringProfileDeniedDomainsPtrOutput `pulumi:"deniedDomains"`
	// The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
	FallbackMethod pulumi.StringOutput `pulumi:"fallbackMethod"`
	// A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// The DNS filtering profile's name.
	Name pulumi.StringOutput `pulumi:"name"`
	// A floating point number representing the profile's priority.
	Priority pulumi.Float64Output `pulumi:"priority"`
	// A block with the following attributes.
	PrivacyCategories TwingateDNSFilteringProfilePrivacyCategoriesPtrOutput `pulumi:"privacyCategories"`
	// A block with the following attributes.
	SecurityCategories TwingateDNSFilteringProfileSecurityCategoriesPtrOutput `pulumi:"securityCategories"`
}

// NewTwingateDNSFilteringProfile registers a new resource with the given unique name, arguments, and options.
func NewTwingateDNSFilteringProfile(ctx *pulumi.Context,
	name string, args *TwingateDNSFilteringProfileArgs, opts ...pulumi.ResourceOption) (*TwingateDNSFilteringProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TwingateDNSFilteringProfile
	err := ctx.RegisterResource("twingate:index/twingateDNSFilteringProfile:TwingateDNSFilteringProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTwingateDNSFilteringProfile gets an existing TwingateDNSFilteringProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTwingateDNSFilteringProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TwingateDNSFilteringProfileState, opts ...pulumi.ResourceOption) (*TwingateDNSFilteringProfile, error) {
	var resource TwingateDNSFilteringProfile
	err := ctx.ReadResource("twingate:index/twingateDNSFilteringProfile:TwingateDNSFilteringProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TwingateDNSFilteringProfile resources.
type twingateDNSFilteringProfileState struct {
	// A block with the following attributes.
	AllowedDomains *TwingateDNSFilteringProfileAllowedDomains `pulumi:"allowedDomains"`
	// A block with the following attributes.
	ContentCategories *TwingateDNSFilteringProfileContentCategories `pulumi:"contentCategories"`
	// A block with the following attributes.
	DeniedDomains *TwingateDNSFilteringProfileDeniedDomains `pulumi:"deniedDomains"`
	// The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
	FallbackMethod *string `pulumi:"fallbackMethod"`
	// A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
	Groups []string `pulumi:"groups"`
	// The DNS filtering profile's name.
	Name *string `pulumi:"name"`
	// A floating point number representing the profile's priority.
	Priority *float64 `pulumi:"priority"`
	// A block with the following attributes.
	PrivacyCategories *TwingateDNSFilteringProfilePrivacyCategories `pulumi:"privacyCategories"`
	// A block with the following attributes.
	SecurityCategories *TwingateDNSFilteringProfileSecurityCategories `pulumi:"securityCategories"`
}

type TwingateDNSFilteringProfileState struct {
	// A block with the following attributes.
	AllowedDomains TwingateDNSFilteringProfileAllowedDomainsPtrInput
	// A block with the following attributes.
	ContentCategories TwingateDNSFilteringProfileContentCategoriesPtrInput
	// A block with the following attributes.
	DeniedDomains TwingateDNSFilteringProfileDeniedDomainsPtrInput
	// The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
	FallbackMethod pulumi.StringPtrInput
	// A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
	Groups pulumi.StringArrayInput
	// The DNS filtering profile's name.
	Name pulumi.StringPtrInput
	// A floating point number representing the profile's priority.
	Priority pulumi.Float64PtrInput
	// A block with the following attributes.
	PrivacyCategories TwingateDNSFilteringProfilePrivacyCategoriesPtrInput
	// A block with the following attributes.
	SecurityCategories TwingateDNSFilteringProfileSecurityCategoriesPtrInput
}

func (TwingateDNSFilteringProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*twingateDNSFilteringProfileState)(nil)).Elem()
}

type twingateDNSFilteringProfileArgs struct {
	// A block with the following attributes.
	AllowedDomains *TwingateDNSFilteringProfileAllowedDomains `pulumi:"allowedDomains"`
	// A block with the following attributes.
	ContentCategories *TwingateDNSFilteringProfileContentCategories `pulumi:"contentCategories"`
	// A block with the following attributes.
	DeniedDomains *TwingateDNSFilteringProfileDeniedDomains `pulumi:"deniedDomains"`
	// The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
	FallbackMethod *string `pulumi:"fallbackMethod"`
	// A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
	Groups []string `pulumi:"groups"`
	// The DNS filtering profile's name.
	Name *string `pulumi:"name"`
	// A floating point number representing the profile's priority.
	Priority float64 `pulumi:"priority"`
	// A block with the following attributes.
	PrivacyCategories *TwingateDNSFilteringProfilePrivacyCategories `pulumi:"privacyCategories"`
	// A block with the following attributes.
	SecurityCategories *TwingateDNSFilteringProfileSecurityCategories `pulumi:"securityCategories"`
}

// The set of arguments for constructing a TwingateDNSFilteringProfile resource.
type TwingateDNSFilteringProfileArgs struct {
	// A block with the following attributes.
	AllowedDomains TwingateDNSFilteringProfileAllowedDomainsPtrInput
	// A block with the following attributes.
	ContentCategories TwingateDNSFilteringProfileContentCategoriesPtrInput
	// A block with the following attributes.
	DeniedDomains TwingateDNSFilteringProfileDeniedDomainsPtrInput
	// The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
	FallbackMethod pulumi.StringPtrInput
	// A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
	Groups pulumi.StringArrayInput
	// The DNS filtering profile's name.
	Name pulumi.StringPtrInput
	// A floating point number representing the profile's priority.
	Priority pulumi.Float64Input
	// A block with the following attributes.
	PrivacyCategories TwingateDNSFilteringProfilePrivacyCategoriesPtrInput
	// A block with the following attributes.
	SecurityCategories TwingateDNSFilteringProfileSecurityCategoriesPtrInput
}

func (TwingateDNSFilteringProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*twingateDNSFilteringProfileArgs)(nil)).Elem()
}

type TwingateDNSFilteringProfileInput interface {
	pulumi.Input

	ToTwingateDNSFilteringProfileOutput() TwingateDNSFilteringProfileOutput
	ToTwingateDNSFilteringProfileOutputWithContext(ctx context.Context) TwingateDNSFilteringProfileOutput
}

func (*TwingateDNSFilteringProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateDNSFilteringProfile)(nil)).Elem()
}

func (i *TwingateDNSFilteringProfile) ToTwingateDNSFilteringProfileOutput() TwingateDNSFilteringProfileOutput {
	return i.ToTwingateDNSFilteringProfileOutputWithContext(context.Background())
}

func (i *TwingateDNSFilteringProfile) ToTwingateDNSFilteringProfileOutputWithContext(ctx context.Context) TwingateDNSFilteringProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateDNSFilteringProfileOutput)
}

// TwingateDNSFilteringProfileArrayInput is an input type that accepts TwingateDNSFilteringProfileArray and TwingateDNSFilteringProfileArrayOutput values.
// You can construct a concrete instance of `TwingateDNSFilteringProfileArrayInput` via:
//
//	TwingateDNSFilteringProfileArray{ TwingateDNSFilteringProfileArgs{...} }
type TwingateDNSFilteringProfileArrayInput interface {
	pulumi.Input

	ToTwingateDNSFilteringProfileArrayOutput() TwingateDNSFilteringProfileArrayOutput
	ToTwingateDNSFilteringProfileArrayOutputWithContext(context.Context) TwingateDNSFilteringProfileArrayOutput
}

type TwingateDNSFilteringProfileArray []TwingateDNSFilteringProfileInput

func (TwingateDNSFilteringProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TwingateDNSFilteringProfile)(nil)).Elem()
}

func (i TwingateDNSFilteringProfileArray) ToTwingateDNSFilteringProfileArrayOutput() TwingateDNSFilteringProfileArrayOutput {
	return i.ToTwingateDNSFilteringProfileArrayOutputWithContext(context.Background())
}

func (i TwingateDNSFilteringProfileArray) ToTwingateDNSFilteringProfileArrayOutputWithContext(ctx context.Context) TwingateDNSFilteringProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateDNSFilteringProfileArrayOutput)
}

// TwingateDNSFilteringProfileMapInput is an input type that accepts TwingateDNSFilteringProfileMap and TwingateDNSFilteringProfileMapOutput values.
// You can construct a concrete instance of `TwingateDNSFilteringProfileMapInput` via:
//
//	TwingateDNSFilteringProfileMap{ "key": TwingateDNSFilteringProfileArgs{...} }
type TwingateDNSFilteringProfileMapInput interface {
	pulumi.Input

	ToTwingateDNSFilteringProfileMapOutput() TwingateDNSFilteringProfileMapOutput
	ToTwingateDNSFilteringProfileMapOutputWithContext(context.Context) TwingateDNSFilteringProfileMapOutput
}

type TwingateDNSFilteringProfileMap map[string]TwingateDNSFilteringProfileInput

func (TwingateDNSFilteringProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TwingateDNSFilteringProfile)(nil)).Elem()
}

func (i TwingateDNSFilteringProfileMap) ToTwingateDNSFilteringProfileMapOutput() TwingateDNSFilteringProfileMapOutput {
	return i.ToTwingateDNSFilteringProfileMapOutputWithContext(context.Background())
}

func (i TwingateDNSFilteringProfileMap) ToTwingateDNSFilteringProfileMapOutputWithContext(ctx context.Context) TwingateDNSFilteringProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateDNSFilteringProfileMapOutput)
}

type TwingateDNSFilteringProfileOutput struct{ *pulumi.OutputState }

func (TwingateDNSFilteringProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateDNSFilteringProfile)(nil)).Elem()
}

func (o TwingateDNSFilteringProfileOutput) ToTwingateDNSFilteringProfileOutput() TwingateDNSFilteringProfileOutput {
	return o
}

func (o TwingateDNSFilteringProfileOutput) ToTwingateDNSFilteringProfileOutputWithContext(ctx context.Context) TwingateDNSFilteringProfileOutput {
	return o
}

// A block with the following attributes.
func (o TwingateDNSFilteringProfileOutput) AllowedDomains() TwingateDNSFilteringProfileAllowedDomainsPtrOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) TwingateDNSFilteringProfileAllowedDomainsPtrOutput {
		return v.AllowedDomains
	}).(TwingateDNSFilteringProfileAllowedDomainsPtrOutput)
}

// A block with the following attributes.
func (o TwingateDNSFilteringProfileOutput) ContentCategories() TwingateDNSFilteringProfileContentCategoriesPtrOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) TwingateDNSFilteringProfileContentCategoriesPtrOutput {
		return v.ContentCategories
	}).(TwingateDNSFilteringProfileContentCategoriesPtrOutput)
}

// A block with the following attributes.
func (o TwingateDNSFilteringProfileOutput) DeniedDomains() TwingateDNSFilteringProfileDeniedDomainsPtrOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) TwingateDNSFilteringProfileDeniedDomainsPtrOutput {
		return v.DeniedDomains
	}).(TwingateDNSFilteringProfileDeniedDomainsPtrOutput)
}

// The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
func (o TwingateDNSFilteringProfileOutput) FallbackMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) pulumi.StringOutput { return v.FallbackMethod }).(pulumi.StringOutput)
}

// A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
func (o TwingateDNSFilteringProfileOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) pulumi.StringArrayOutput { return v.Groups }).(pulumi.StringArrayOutput)
}

// The DNS filtering profile's name.
func (o TwingateDNSFilteringProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A floating point number representing the profile's priority.
func (o TwingateDNSFilteringProfileOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) pulumi.Float64Output { return v.Priority }).(pulumi.Float64Output)
}

// A block with the following attributes.
func (o TwingateDNSFilteringProfileOutput) PrivacyCategories() TwingateDNSFilteringProfilePrivacyCategoriesPtrOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) TwingateDNSFilteringProfilePrivacyCategoriesPtrOutput {
		return v.PrivacyCategories
	}).(TwingateDNSFilteringProfilePrivacyCategoriesPtrOutput)
}

// A block with the following attributes.
func (o TwingateDNSFilteringProfileOutput) SecurityCategories() TwingateDNSFilteringProfileSecurityCategoriesPtrOutput {
	return o.ApplyT(func(v *TwingateDNSFilteringProfile) TwingateDNSFilteringProfileSecurityCategoriesPtrOutput {
		return v.SecurityCategories
	}).(TwingateDNSFilteringProfileSecurityCategoriesPtrOutput)
}

type TwingateDNSFilteringProfileArrayOutput struct{ *pulumi.OutputState }

func (TwingateDNSFilteringProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TwingateDNSFilteringProfile)(nil)).Elem()
}

func (o TwingateDNSFilteringProfileArrayOutput) ToTwingateDNSFilteringProfileArrayOutput() TwingateDNSFilteringProfileArrayOutput {
	return o
}

func (o TwingateDNSFilteringProfileArrayOutput) ToTwingateDNSFilteringProfileArrayOutputWithContext(ctx context.Context) TwingateDNSFilteringProfileArrayOutput {
	return o
}

func (o TwingateDNSFilteringProfileArrayOutput) Index(i pulumi.IntInput) TwingateDNSFilteringProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TwingateDNSFilteringProfile {
		return vs[0].([]*TwingateDNSFilteringProfile)[vs[1].(int)]
	}).(TwingateDNSFilteringProfileOutput)
}

type TwingateDNSFilteringProfileMapOutput struct{ *pulumi.OutputState }

func (TwingateDNSFilteringProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TwingateDNSFilteringProfile)(nil)).Elem()
}

func (o TwingateDNSFilteringProfileMapOutput) ToTwingateDNSFilteringProfileMapOutput() TwingateDNSFilteringProfileMapOutput {
	return o
}

func (o TwingateDNSFilteringProfileMapOutput) ToTwingateDNSFilteringProfileMapOutputWithContext(ctx context.Context) TwingateDNSFilteringProfileMapOutput {
	return o
}

func (o TwingateDNSFilteringProfileMapOutput) MapIndex(k pulumi.StringInput) TwingateDNSFilteringProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TwingateDNSFilteringProfile {
		return vs[0].(map[string]*TwingateDNSFilteringProfile)[vs[1].(string)]
	}).(TwingateDNSFilteringProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateDNSFilteringProfileInput)(nil)).Elem(), &TwingateDNSFilteringProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateDNSFilteringProfileArrayInput)(nil)).Elem(), TwingateDNSFilteringProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateDNSFilteringProfileMapInput)(nil)).Elem(), TwingateDNSFilteringProfileMap{})
	pulumi.RegisterOutputType(TwingateDNSFilteringProfileOutput{})
	pulumi.RegisterOutputType(TwingateDNSFilteringProfileArrayOutput{})
	pulumi.RegisterOutputType(TwingateDNSFilteringProfileMapOutput{})
}
