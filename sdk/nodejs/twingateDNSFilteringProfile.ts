// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * DNS filtering gives you the ability to control what websites your users can access. DNS filtering is only available on certain plans. For more information, see Twingate's [documentation](https://www.twingate.com/docs/dns-filtering). DNS filtering must be enabled for this resources to work. If DNS filtering isn't enabled, the provider will throw an error.
 */
export class TwingateDNSFilteringProfile extends pulumi.CustomResource {
    /**
     * Get an existing TwingateDNSFilteringProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TwingateDNSFilteringProfileState, opts?: pulumi.CustomResourceOptions): TwingateDNSFilteringProfile {
        return new TwingateDNSFilteringProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'twingate:index/twingateDNSFilteringProfile:TwingateDNSFilteringProfile';

    /**
     * Returns true if the given object is an instance of TwingateDNSFilteringProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TwingateDNSFilteringProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TwingateDNSFilteringProfile.__pulumiType;
    }

    /**
     * A block with the following attributes.
     */
    public readonly allowedDomains!: pulumi.Output<outputs.TwingateDNSFilteringProfileAllowedDomains | undefined>;
    /**
     * A block with the following attributes.
     */
    public readonly contentCategories!: pulumi.Output<outputs.TwingateDNSFilteringProfileContentCategories | undefined>;
    /**
     * A block with the following attributes.
     */
    public readonly deniedDomains!: pulumi.Output<outputs.TwingateDNSFilteringProfileDeniedDomains | undefined>;
    /**
     * The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
     */
    public readonly fallbackMethod!: pulumi.Output<string>;
    /**
     * A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
     */
    public readonly groups!: pulumi.Output<string[]>;
    /**
     * The DNS filtering profile's name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A floating point number representing the profile's priority.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * A block with the following attributes.
     */
    public readonly privacyCategories!: pulumi.Output<outputs.TwingateDNSFilteringProfilePrivacyCategories | undefined>;
    /**
     * A block with the following attributes.
     */
    public readonly securityCategories!: pulumi.Output<outputs.TwingateDNSFilteringProfileSecurityCategories | undefined>;

    /**
     * Create a TwingateDNSFilteringProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TwingateDNSFilteringProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TwingateDNSFilteringProfileArgs | TwingateDNSFilteringProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TwingateDNSFilteringProfileState | undefined;
            resourceInputs["allowedDomains"] = state ? state.allowedDomains : undefined;
            resourceInputs["contentCategories"] = state ? state.contentCategories : undefined;
            resourceInputs["deniedDomains"] = state ? state.deniedDomains : undefined;
            resourceInputs["fallbackMethod"] = state ? state.fallbackMethod : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["privacyCategories"] = state ? state.privacyCategories : undefined;
            resourceInputs["securityCategories"] = state ? state.securityCategories : undefined;
        } else {
            const args = argsOrState as TwingateDNSFilteringProfileArgs | undefined;
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            resourceInputs["allowedDomains"] = args ? args.allowedDomains : undefined;
            resourceInputs["contentCategories"] = args ? args.contentCategories : undefined;
            resourceInputs["deniedDomains"] = args ? args.deniedDomains : undefined;
            resourceInputs["fallbackMethod"] = args ? args.fallbackMethod : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["privacyCategories"] = args ? args.privacyCategories : undefined;
            resourceInputs["securityCategories"] = args ? args.securityCategories : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TwingateDNSFilteringProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TwingateDNSFilteringProfile resources.
 */
export interface TwingateDNSFilteringProfileState {
    /**
     * A block with the following attributes.
     */
    allowedDomains?: pulumi.Input<inputs.TwingateDNSFilteringProfileAllowedDomains>;
    /**
     * A block with the following attributes.
     */
    contentCategories?: pulumi.Input<inputs.TwingateDNSFilteringProfileContentCategories>;
    /**
     * A block with the following attributes.
     */
    deniedDomains?: pulumi.Input<inputs.TwingateDNSFilteringProfileDeniedDomains>;
    /**
     * The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
     */
    fallbackMethod?: pulumi.Input<string>;
    /**
     * A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS filtering profile's name.
     */
    name?: pulumi.Input<string>;
    /**
     * A floating point number representing the profile's priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * A block with the following attributes.
     */
    privacyCategories?: pulumi.Input<inputs.TwingateDNSFilteringProfilePrivacyCategories>;
    /**
     * A block with the following attributes.
     */
    securityCategories?: pulumi.Input<inputs.TwingateDNSFilteringProfileSecurityCategories>;
}

/**
 * The set of arguments for constructing a TwingateDNSFilteringProfile resource.
 */
export interface TwingateDNSFilteringProfileArgs {
    /**
     * A block with the following attributes.
     */
    allowedDomains?: pulumi.Input<inputs.TwingateDNSFilteringProfileAllowedDomains>;
    /**
     * A block with the following attributes.
     */
    contentCategories?: pulumi.Input<inputs.TwingateDNSFilteringProfileContentCategories>;
    /**
     * A block with the following attributes.
     */
    deniedDomains?: pulumi.Input<inputs.TwingateDNSFilteringProfileDeniedDomains>;
    /**
     * The DNS filtering profile's fallback method. One of "AUTO" or "STRICT". Defaults to "STRICT".
     */
    fallbackMethod?: pulumi.Input<string>;
    /**
     * A set of group IDs that have this as their DNS filtering profile. Defaults to an empty set.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS filtering profile's name.
     */
    name?: pulumi.Input<string>;
    /**
     * A floating point number representing the profile's priority.
     */
    priority: pulumi.Input<number>;
    /**
     * A block with the following attributes.
     */
    privacyCategories?: pulumi.Input<inputs.TwingateDNSFilteringProfilePrivacyCategories>;
    /**
     * A block with the following attributes.
     */
    securityCategories?: pulumi.Input<inputs.TwingateDNSFilteringProfileSecurityCategories>;
}
