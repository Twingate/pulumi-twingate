// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Twingate.Twingate.Inputs
{

    public sealed class ProviderCacheResourcesFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Returns only resources that exactly match this name. If no options are passed it will return all resources. Only one option can be used at a time.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Match when the value exist in the name of the resource.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        /// <summary>
        /// Match when the exact value does not exist in the name of the resource.
        /// </summary>
        [Input("nameExclude")]
        public Input<string>? NameExclude { get; set; }

        /// <summary>
        /// The name of the resource must start with the value.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// The regular expression match of the name of the resource.
        /// </summary>
        [Input("nameRegexp")]
        public Input<string>? NameRegexp { get; set; }

        /// <summary>
        /// The name of the resource must end with the value.
        /// </summary>
        [Input("nameSuffix")]
        public Input<string>? NameSuffix { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Returns only resources that exactly match the given tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ProviderCacheResourcesFilterArgs()
        {
        }
        public static new ProviderCacheResourcesFilterArgs Empty => new ProviderCacheResourcesFilterArgs();
    }
}
