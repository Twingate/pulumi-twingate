// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Twingate.Twingate.Inputs
{

    public sealed class GetTwingateDNSFilteringProfileContentCategoriesInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to block adult content.
        /// </summary>
        [Input("blockAdultContent", required: true)]
        public Input<bool> BlockAdultContent { get; set; } = null!;

        /// <summary>
        /// Whether to block dating content.
        /// </summary>
        [Input("blockDating", required: true)]
        public Input<bool> BlockDating { get; set; } = null!;

        /// <summary>
        /// Whether to block gambling content.
        /// </summary>
        [Input("blockGambling", required: true)]
        public Input<bool> BlockGambling { get; set; } = null!;

        /// <summary>
        /// Whether to block games.
        /// </summary>
        [Input("blockGames", required: true)]
        public Input<bool> BlockGames { get; set; } = null!;

        /// <summary>
        /// Whether to block piracy sites.
        /// </summary>
        [Input("blockPiracy", required: true)]
        public Input<bool> BlockPiracy { get; set; } = null!;

        /// <summary>
        /// Whether to block social media.
        /// </summary>
        [Input("blockSocialMedia", required: true)]
        public Input<bool> BlockSocialMedia { get; set; } = null!;

        /// <summary>
        /// Whether to block streaming content.
        /// </summary>
        [Input("blockStreaming", required: true)]
        public Input<bool> BlockStreaming { get; set; } = null!;

        /// <summary>
        /// Whether to force safe search.
        /// </summary>
        [Input("enableSafesearch", required: true)]
        public Input<bool> EnableSafesearch { get; set; } = null!;

        /// <summary>
        /// Whether to force YouTube to use restricted mode.
        /// </summary>
        [Input("enableYoutubeRestrictedMode", required: true)]
        public Input<bool> EnableYoutubeRestrictedMode { get; set; } = null!;

        public GetTwingateDNSFilteringProfileContentCategoriesInputArgs()
        {
        }
        public static new GetTwingateDNSFilteringProfileContentCategoriesInputArgs Empty => new GetTwingateDNSFilteringProfileContentCategoriesInputArgs();
    }
}
