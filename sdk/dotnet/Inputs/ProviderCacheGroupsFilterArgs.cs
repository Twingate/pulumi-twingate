// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Twingate.Twingate.Inputs
{

    public sealed class ProviderCacheGroupsFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Returns only Groups matching the specified state.
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// Returns only groups that exactly match this name. If no options are passed it will return all resources. Only one option can be used at a time.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Match when the value exist in the name of the group.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        /// <summary>
        /// Match when the exact value does not exist in the name of the group.
        /// </summary>
        [Input("nameExclude")]
        public Input<string>? NameExclude { get; set; }

        /// <summary>
        /// The name of the group must start with the value.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// The regular expression match of the name of the group.
        /// </summary>
        [Input("nameRegexp")]
        public Input<string>? NameRegexp { get; set; }

        /// <summary>
        /// The name of the group must end with the value.
        /// </summary>
        [Input("nameSuffix")]
        public Input<string>? NameSuffix { get; set; }

        [Input("types")]
        private InputList<string>? _types;

        /// <summary>
        /// Returns groups that match a list of types. valid types: `MANUAL`, `SYNCED`, `SYSTEM`.
        /// </summary>
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        public ProviderCacheGroupsFilterArgs()
        {
        }
        public static new ProviderCacheGroupsFilterArgs Empty => new ProviderCacheGroupsFilterArgs();
    }
}
