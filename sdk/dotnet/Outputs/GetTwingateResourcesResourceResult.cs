// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Twingate.Twingate.Outputs
{

    [OutputType]
    public sealed class GetTwingateResourcesResourceResult
    {
        /// <summary>
        /// The Resource's IP/CIDR or FQDN/DNS zone
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// The Approval Mode of the Resource. The valid values are `AUTOMATIC` and `MANUAL`.
        /// </summary>
        public readonly string ApprovalMode;
        /// <summary>
        /// The id of the Resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.
        /// </summary>
        public readonly Outputs.GetTwingateResourcesResourceProtocolsResult Protocols;
        /// <summary>
        /// Remote Network ID where the Resource lives
        /// </summary>
        public readonly string RemoteNetworkId;
        /// <summary>
        /// The `tags` attribute consists of a key-value pairs that correspond with tags to be set on the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The number of days that the Resource will be locked after the last successful login.
        /// </summary>
        public readonly int UsageBasedAutolockDurationDays;

        [OutputConstructor]
        private GetTwingateResourcesResourceResult(
            string address,

            string approvalMode,

            string id,

            string name,

            Outputs.GetTwingateResourcesResourceProtocolsResult protocols,

            string remoteNetworkId,

            ImmutableDictionary<string, string> tags,

            int usageBasedAutolockDurationDays)
        {
            Address = address;
            ApprovalMode = approvalMode;
            Id = id;
            Name = name;
            Protocols = protocols;
            RemoteNetworkId = remoteNetworkId;
            Tags = tags;
            UsageBasedAutolockDurationDays = usageBasedAutolockDurationDays;
        }
    }
}
