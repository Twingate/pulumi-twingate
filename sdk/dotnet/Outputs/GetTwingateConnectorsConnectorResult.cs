// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Twingate.Twingate.Outputs
{

    [OutputType]
    public sealed class GetTwingateConnectorsConnectorResult
    {
        /// <summary>
        /// The hostname of the machine hosting the Connector.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The ID of the Connector.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Name of the Connector.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Connector's private IP addresses.
        /// </summary>
        public readonly ImmutableArray<string> PrivateIps;
        /// <summary>
        /// The Connector's public IP address.
        /// </summary>
        public readonly string PublicIp;
        /// <summary>
        /// The ID of the Remote Network attached to the Connector.
        /// </summary>
        public readonly string RemoteNetworkId;
        /// <summary>
        /// The Connector's state. One of `ALIVE`, `DEAD_NO_HEARTBEAT`, `DEAD_HEARTBEAT_TOO_OLD` or `DEAD_NO_RELAYS`.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Determines whether status notifications are enabled for the Connector.
        /// </summary>
        public readonly bool StatusUpdatesEnabled;
        /// <summary>
        /// The Connector's version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetTwingateConnectorsConnectorResult(
            string hostname,

            string id,

            string name,

            ImmutableArray<string> privateIps,

            string publicIp,

            string remoteNetworkId,

            string state,

            bool statusUpdatesEnabled,

            string version)
        {
            Hostname = hostname;
            Id = id;
            Name = name;
            PrivateIps = privateIps;
            PublicIp = publicIp;
            RemoteNetworkId = remoteNetworkId;
            State = state;
            StatusUpdatesEnabled = statusUpdatesEnabled;
            Version = version;
        }
    }
}
